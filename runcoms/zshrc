# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# if running on Android device (Termux)
if [[ "$OSTYPE" == "linux-android" ]]; then
  if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zaliases_android" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zaliases_android"
  fi
else
  if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zaliases" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zaliases"
  fi

  if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zaliases_arco" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zaliases_arco"
  fi

  # Search backwards and forwards with a pattern
  #bindkey -M vicmd '^[R' history-incremental-pattern-search-backward
  #bindkey -M vicmd '^[F' history-incremental-pattern-search-forward
  # Set up for insert mode too
  #bindkey -M viins '^[R' history-incremental-pattern-search-backward
  #bindkey -M viins '^[F' history-incremental-pattern-search-forward

  ## Workaround for handling TERM variable in multiple tmux sessions properly -
  # Source:
  # https://wiki.archlinux.org/index.php/tmux#Correct_the_TERM_variable_according_to_terminal_type

  if [[ -n ${TMUX} && -n ${commands[tmux]} ]]; then
    case $(tmux showenv TERM 2>/dev/null) in
      *256color) ;&
      TERM=fbterm)
        TERM=screen-256color ;;
      *)
        TERM=screen
    esac
  fi

  ## create a zkbd compatible hash;
  ## to add other keys to this hash, see: man 5 terminfo
  #typeset -g -A key

  #key[Home]="${terminfo[khome]}"
  #key[End]="${terminfo[kend]}"
  #key[Insert]="${terminfo[kich1]}"
  #key[Backspace]="${terminfo[kbs]}"
  #key[Delete]="${terminfo[kdch1]}"
  #key[Up]="${terminfo[kcuu1]}"
  #key[Down]="${terminfo[kcud1]}"
  #key[Left]="${terminfo[kcub1]}"
  #key[Right]="${terminfo[kcuf1]}"
  #key[PageUp]="${terminfo[kpp]}"
  #key[PageDown]="${terminfo[knp]}"
  #key[Shift-Tab]="${terminfo[kcbt]}"

  ## setup key accordingly
  #[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
  #[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
  #[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
  #[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
  #[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
  #[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
  #[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
  #[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
  #[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
  #[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
  #[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
  #[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

  ## modifiers
  #key[Control-Left]="${terminfo[kLFT5]}"
  #key[Control-Right]="${terminfo[kRIT5]}"

  #[[ -n "${key[Control-Left]}"  ]] && bindkey -- "${key[Control-Left]}"  backward-word
  #[[ -n "${key[Control-Right]}" ]] && bindkey -- "${key[Control-Right]}" forward-word

  ## Finally, make sure the terminal is in application mode, when zle is
  ## active. Only then are the values from $terminfo valid.
  #if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
  #	autoload -Uz add-zle-hook-widget
  #	function zle_application_mode_start { echoti smkx }
  #	function zle_application_mode_stop { echoti rmkx }
  #	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
  #	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
  #fi
fi


# dotglob lets glob match dotfiles
setopt dotglob

# allow overwritting existing files
#setopt CLOBBER     # Use '>!' and '>>!' when this is commented out.

# Disabled: CDABLE_VARS changes directory to a path stored in a variable.
setopt nocdablevars

# >>>> Vagrant command completion (start)
fpath=(/opt/vagrant/embedded/gems/2.2.14/gems/vagrant-2.2.14/contrib/zsh $fpath)
compinit
# <<<<  Vagrant command completion (end)

# To customize prompt, run `p10k configure` or edit ~/.zprezto/runcoms/p10k.zsh.
[[ ! -f ~/.zprezto/runcoms/p10k.zsh ]] || source ~/.zprezto/runcoms/p10k.zsh

